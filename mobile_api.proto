syntax = "proto3";

import "user.proto";
import "company.proto";
import "skill.proto";
import "offer.proto";
import "order.proto";
import "notification.proto";

option csharp_namespace = "MobileApiGetway";

package mobileApi;

service MobileApi{
   //MobileApiService
   rpc GetFitForCompanyUsers(GetFitForCompanyUsersRequest ) returns (GetFitForCompanyUsersReply);


  // UserRepoService
	rpc ApiAddUser(user.AddUserRequest) returns (user.AddUserReply);
	rpc ApiGetUser (user.GetUserRequest) returns (user.GetUserReply);
	rpc ApiGetUsers(user.GetUsersRequest ) returns (user.GetUsersReply );
	rpc ApiDelUser(user.DelUserRequest ) returns (user.DelUserReply );

	// CompanyService
	rpc ApiAddCompany(company.AddCompanyRequest) returns (company.AddCompanyReply);
	rpc ApiJoinToCompany(company.JoinToCompanyRequest) returns (company.JoinToCompanyReply);
	rpc ApiGetCompany (company.GetCompanyRequest) returns (company.GetCompanyReply);
	rpc ApiGetCompanies(company.GetCompaniesRequest ) returns (company.GetCompaniesReply );
	rpc ApiDelCompany(company.DelCompanyRequest ) returns (company.DelCompanyReply );	

	//SkillService
	rpc ApiAddSkill(skill.AddSkillRequest)returns (skill.AddSkillReply);
	rpc ApiGetSkills(skill.GetSkillsRequest ) returns (skill.GetSkillsReply );
	rpc ApiDelSkill(skill.DelSkillRequest ) returns (skill.DelSkillReply );

	//OfferService
	rpc ApiAddOffer(offer.AddOfferRequest)returns (offer.AddOfferReply);
	rpc ApiGetOffers(offer.GetOffersRequest) returns (offer.GetOffersReply);
	rpc ApiGetOffersByMaster(offer.GetOffersByMasterRequest ) returns (offer.GetOffersReply );
	rpc ApiGetOffersBySkill(offer.GetOffersBySkillRequest ) returns (offer.GetOffersReply );
	rpc ApiDelOffer(offer.DelOfferRequest ) returns (offer.DelOfferReply );

	//OrderService
	rpc ApiAddOrder(order.AddOrderRequest)returns (order.AddOrderReply);
	rpc ApiGetOrders(order.GetOrdersRequest ) returns (order.GetOrdersReply );
	rpc ApiDelOrder(order.DelOrderRequest ) returns (order.DelOrderReply );
	rpc ApiAcceptedOrder(order.AcceptedOrderRequest) returns(order.AcceptedOrderReply);
	rpc ApiExecutedOrder(order.ExecutedOrderRequest) returns(order.ExecutedOrderReply);

	//NotificationService
	rpc ApiSendMessage(notification.SendNotificationRequest) returns (notification.SendNotificationReply);
	rpc ApiFindLastMessage(notification.FindLastGetMessageRequest) returns (notification.FindLastGetMessageReply);

	//LocationService
	rpc ApiGetUserLocation(ApiGetUserLocationRequest) returns (ApiGetUserLocationReply);
	rpc ApiSetUserLocation(ApiSetUserLocationRequest) returns (ApiSetUserLocationReply);
}

//MobileApiService
message GetFitForCompanyUsersRequest {
  string companyGuid = 1;
  bool isConsistIn = 2;
}
message GetFitForCompanyUsersReply {
  repeated string guids = 1;
  repeated string names = 2;
}

//LocationService
message ApiGetUserLocationRequest{
	string guid  = 1;
}

message ApiGetUserLocationReply{
	string forGuid = 1;
	string lat = 2;
	string lng = 3;
}

message ApiSetUserLocationRequest{
	string forGuid = 1;
	string lat = 2;
	string lng = 3;
}

message ApiSetUserLocationReply{
	bool result = 1;
}
